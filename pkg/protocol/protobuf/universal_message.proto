syntax = "proto3";

package UniversalMessage;

option go_package = "github.com/teslamotors/vehicle-command/pkg/protocol/protobuf/universalmessage";
option java_package = "com.tesla.generated.universalmessage";

import "signatures.proto";

enum Domain {
    DOMAIN_BROADCAST = 0;
    DOMAIN_VEHICLE_SECURITY = 2;
    DOMAIN_INFOTAINMENT = 3;
}

message Destination {
    oneof sub_destination{
        Domain domain            = 1;
        bytes  routing_address   = 2;
    }
}

enum OperationStatus_E
{
    OPERATIONSTATUS_OK = 0;
    OPERATIONSTATUS_WAIT = 1;
    OPERATIONSTATUS_ERROR = 2;
}

enum MessageFault_E
{
    MESSAGEFAULT_ERROR_NONE = 0; // Request succeeded.
    MESSAGEFAULT_ERROR_BUSY = 1; // Required vehicle subsystem is busy. Try again.
    MESSAGEFAULT_ERROR_TIMEOUT = 2; // Vehicle subsystem did not respond. Try again.
    MESSAGEFAULT_ERROR_UNKNOWN_KEY_ID = 3; // Vehicle did not recognize the key used to authorize command. Make sure your key is paired with the vehicle.
    MESSAGEFAULT_ERROR_INACTIVE_KEY = 4; // Key used to authorize command has been disabled.
    MESSAGEFAULT_ERROR_INVALID_SIGNATURE = 5; // Command signature/MAC is incorrect. Use included session info to update session and try again.
    MESSAGEFAULT_ERROR_INVALID_TOKEN_OR_COUNTER = 6; // Command anti-replay counter has been used before. Use included session info to update session and try again.
    MESSAGEFAULT_ERROR_INSUFFICIENT_PRIVILEGES = 7; // User is not authorized to execute command. This can be because of the role or because of vehicle state.
    MESSAGEFAULT_ERROR_INVALID_DOMAINS = 8; // Command was malformed or addressed to an unrecognized vehicle system. May indicate client error or older vehicle firmware.
    MESSAGEFAULT_ERROR_INVALID_COMMAND = 9; // Unrecognized command. May indicate client error or unsupported vehicle firmware.
    MESSAGEFAULT_ERROR_DECODING = 10; // Could not parse command. Indicates client error.
    MESSAGEFAULT_ERROR_INTERNAL = 11; // Internal vehicle error. Try again. Most commonly encountered when the vehicle has not finished booting.
    MESSAGEFAULT_ERROR_WRONG_PERSONALIZATION = 12; // Command sent to wrong VIN.
    MESSAGEFAULT_ERROR_BAD_PARAMETER = 13; // Command was malformed or used a deprecated parameter.
    MESSAGEFAULT_ERROR_KEYCHAIN_IS_FULL = 14; // Vehicle's keychain is full. You must delete a key before you can add another.
    MESSAGEFAULT_ERROR_INCORRECT_EPOCH = 15; // Session ID mismatch. Use included session info to update session and try again.
    MESSAGEFAULT_ERROR_IV_INCORRECT_LENGTH = 16; // Initialization Value length is incorrect (AES-GCM must use 12-byte IVs). Indicates a client programming error.
    MESSAGEFAULT_ERROR_TIME_EXPIRED = 17; // Command expired. Use included session info to determine if clocks have desynchronized and try again.
    MESSAGEFAULT_ERROR_NOT_PROVISIONED_WITH_IDENTITY = 18; // Vehicle has not been provisioned with a VIN and may require service.
    MESSAGEFAULT_ERROR_COULD_NOT_HASH_METADATA = 19; // Internal vehicle error.
    MESSAGEFAULT_ERROR_TIME_TO_LIVE_TOO_LONG = 20; // Vehicle rejected command because its expiration time was too far in the future. This is a security precaution.
    MESSAGEFAULT_ERROR_REMOTE_ACCESS_DISABLED = 21; // The vehicle owner has disabled Mobile access.
    MESSAGEFAULT_ERROR_REMOTE_SERVICE_ACCESS_DISABLED = 22; // The command was authorized with a Service key, but the vehicle has not been configured to permit remote service commands.
    MESSAGEFAULT_ERROR_COMMAND_REQUIRES_ACCOUNT_CREDENTIALS = 23; // The command requires proof of Tesla account credentials but was not sent over a channel that provides this proof. Resend the command using Fleet API.
    MESSAGEFAULT_ERROR_REQUEST_MTU_EXCEEDED = 24; // Client sent a request with a field that exceeds MTU
    MESSAGEFAULT_ERROR_RESPONSE_MTU_EXCEEDED = 25; // Client's request was received, but response size exceeded MTU
    MESSAGEFAULT_ERROR_REPEATED_COUNTER = 26;
    MESSAGEFAULT_ERROR_INVALID_KEY_HANDLE = 27;
    MESSAGEFAULT_ERROR_REQUIRES_RESPONSE_ENCRYPTION = 28;
}

message MessageStatus
{
    OperationStatus_E operation_status = 1;
    MessageFault_E signed_message_fault = 2;
}

message SessionInfoRequest
{
    bytes public_key = 1;
    bytes challenge = 2;
}

enum Flags {
    FLAG_USER_COMMAND = 0;
    FLAG_ENCRYPT_RESPONSE = 1;
}

message RoutableMessage {
    reserved 1 to 5;
    reserved 16 to 40;
    reserved 11;
    Destination to_destination = 6;
    Destination from_destination = 7;

    oneof payload {
        bytes protobuf_message_as_bytes = 10;
        SessionInfoRequest session_info_request = 14;
        bytes session_info = 15;
    }

    oneof sub_sigData {
        Signatures.SignatureData signature_data = 13;
    }

    MessageStatus signedMessageStatus = 12;
    bytes request_uuid           = 50;
    bytes uuid                   = 51;
    uint32 flags = 52;
}
